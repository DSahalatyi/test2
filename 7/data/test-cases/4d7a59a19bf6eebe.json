{"uid":"4d7a59a19bf6eebe","name":"test_attempt_create_user_with_existing_email","fullName":"tests.user_api.test_user_create#test_attempt_create_user_with_existing_email","historyId":"3a79ab251a3be896e3d89f8be335903d","time":{"start":1677442162858,"stop":1677442162863,"duration":5},"status":"failed","statusMessage":"AssertionError: assert 405 == 400\n +  where 405 = <Response [405 Method Not Allowed]>.status_code","statusTrace":"client_is_staff_token = <httpx.Client object at 0x7fa1917d1290>\ndb_utility = <src.utilities.db_utility.DBUtility object at 0x7fa1905a1190>\nrandom_user_info = {'age': 22, 'email': 'test_email@g.com', 'first_name': 'Janice', 'last_name': 'Young', ...}\n\n    @pytest.mark.tcid18\n    @pytest.mark.usefixtures(\"register_test_user\")\n    def test_attempt_create_user_with_existing_email(client_is_staff_token, db_utility, random_user_info):\n        existing_user = list(db_utility.users.aggregate([{'$sample': {\"size\": 1}}]))\n        random_user_info[\"email\"] = existing_user[0][\"email\"]\n        response = client_is_staff_token.post(\"api/user/create\", json=random_user_info)\n>       assert response.status_code == 400\nE       assert 405 == 400\nE        +  where 405 = <Response [405 Method Not Allowed]>.status_code\n\ntests/user_api/test_user_create.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"client","time":{"start":1677442162110,"stop":1677442162177,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_user_info","time":{"start":1677442162700,"stop":1677442162700,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"register_test_user","time":{"start":1677442162700,"stop":1677442162744,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client_is_staff_token","time":{"start":1677442162744,"stop":1677442162854,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_utility","time":{"start":1677442162854,"stop":1677442162857,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"random_user_info","time":{"start":1677442162858,"stop":1677442162858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"random_user_info::0","time":{"start":1677442162873,"stop":1677442162873,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_utility::0","time":{"start":1677442162873,"stop":1677442162875,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client_is_staff_token::0","time":{"start":1677442162876,"stop":1677442162876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_user_info::0","time":{"start":1677442162876,"stop":1677442162877,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"register_test_user::0","time":{"start":1677442162876,"stop":1677442162876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1677442164299,"stop":1677442164299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('register_test_user')"},{"name":"tag","value":"tcid18"},{"name":"tag","value":"create_user"},{"name":"parentSuite","value":"tests.user_api"},{"name":"suite","value":"test_user_create"},{"name":"host","value":"fv-az563-646"},{"name":"thread","value":"2968-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.user_api.test_user_create"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('register_test_user')","tcid18","create_user"]},"source":"4d7a59a19bf6eebe.json","parameterValues":[]}