{"uid":"a1b937f19330354b","name":"test_attempt_update_food_item_with_empty_food_section","fullName":"tests.food_item_api.test_food_item_update#test_attempt_update_food_item_with_empty_food_section","historyId":"adc0ef3f6708ea7f5dbfec1e4ebd6c93","time":{"start":1677527511685,"stop":1677527511732,"duration":47},"status":"failed","statusMessage":"AssertionError: assert 500 == 409\n +  where 500 = <Response [500 Internal Server Error]>.status_code","statusTrace":"client_is_staff_token = <httpx.Client object at 0x7f2abf8b1dd0>\ntest_food_item_info = {'food_section': '', 'image': 'test.png', 'is_available': True, 'name': 'Test_food_item', ...}\ndb_utility = <src.utilities.db_utility.DBUtility object at 0x7f2abf848a90>\n\n    @pytest.mark.tcid84\n    @pytest.mark.usefixtures(\"create_test_food_item\")\n    def test_attempt_update_food_item_with_empty_food_section(client_is_staff_token, test_food_item_info, db_utility):\n        test_food_item_info[\"food_section\"] = ''\n        initial_food_item = list(db_utility.fooditems.find({}))[0]\n        response = client_is_staff_token.post(\n            f\"api/food-item/{initial_food_item['_id']}/update\", data=test_food_item_info, files=image\n        )\n>       assert response.status_code == 409\nE       assert 500 == 409\nE        +  where 500 = <Response [500 Internal Server Error]>.status_code\n\ntests/food_item_api/test_food_item_update.py:80: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"client","time":{"start":1677527509926,"stop":1677527509998,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_user_info","time":{"start":1677527511459,"stop":1677527511459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"register_test_user","time":{"start":1677527511459,"stop":1677527511510,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client_is_staff_token","time":{"start":1677527511510,"stop":1677527511629,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_utility","time":{"start":1677527511629,"stop":1677527511632,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_food_section_info","time":{"start":1677527511632,"stop":1677527511632,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_test_food_section","time":{"start":1677527511632,"stop":1677527511636,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_food_item_info","time":{"start":1677527511636,"stop":1677527511638,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_test_food_item","time":{"start":1677527511638,"stop":1677527511684,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"create_test_food_item::0","time":{"start":1677527511737,"stop":1677527511737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_food_section_info::0","time":{"start":1677527511737,"stop":1677527511737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_food_item_info::0","time":{"start":1677527511737,"stop":1677527511737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_utility::0","time":{"start":1677527511738,"stop":1677527511740,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client_is_staff_token::0","time":{"start":1677527511740,"stop":1677527511740,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_user_info::0","time":{"start":1677527511741,"stop":1677527511741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"register_test_user::0","time":{"start":1677527511741,"stop":1677527511741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"client::0","time":{"start":1677527512591,"stop":1677527512591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('create_test_food_item')"},{"name":"tag","value":"tcid84"},{"name":"tag","value":"food_item_update"},{"name":"parentSuite","value":"tests.food_item_api"},{"name":"suite","value":"test_food_item_update"},{"name":"host","value":"fv-az361-125"},{"name":"thread","value":"2849-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.food_item_api.test_food_item_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["tcid84","@pytest.mark.usefixtures('create_test_food_item')","food_item_update"]},"source":"a1b937f19330354b.json","parameterValues":[]}